---
import Layout from './_layout.astro';
import { createHelpers } from '../../../../lib/trpc/root';
import { postSurvey } from './_db';

export const prerender = false; // enable SSR

if (Astro.request.method === 'POST') {
	const data = await Astro.request.formData();
	await postSurvey(data);
	return Astro.redirect(`/demo/htmx/safe/thank-you`);
}

function validateRating(rating: string) {
	const ratingInt = Number(rating);
	return ratingInt >= 1 && ratingInt <= 5 ? String(ratingInt) : undefined;
}

const url = new URL(Astro.request.url);
const ratingString = new URLSearchParams(url.search).get('rating');
const validRating = validateRating(ratingString || '');
if (validRating === undefined) {
	return Astro.redirect('/demo/htmx/safe/rate-experience');
}
// TODO: add validation
const postSurveyMutation = {};
---

<Layout>
	<div class="flex h-screen flex-col items-center justify-center">
		<h2 class="mb-4 text-2xl">Any comments or suggestions?</h2>
		<form class="w-full px-8 sm:w-96" method="post">
			<input type="hidden" name="rating" value={validRating} />
			<textarea
				name="comments"
				class="mb-2 w-full rounded-md border border-gray-200 px-3 py-2"
				placeholder="optional (max 1000 characters)"></textarea>
			<fieldset class="mb-2">
				<label>
					<input type="checkbox" class="mr-2" name="is_public" />
					Makes it public{' '}
					<span class="text-sm">(your comment will be visible to everyone)</span>
				</label>
			</fieldset>
			{
				postSurveyMutation.isError && (
					<p class="mb-2 rounded-md bg-red-100 p-2 text-red-500">
						Error!{' '}
						{postSurveyMutation.error.data?.code === 'BAD_REQUEST'
							? 'Invlid form data'
							: 'Unknown error'}
					</p>
				)
			}
			<button
				type="submit"
				class="w-full rounded-md bg-blue-500 px-3 py-2 text-white hover:bg-blue-600 disabled:opacity-50"
			>
				Submit
			</button>
		</form>
		<a href="/demo/htmx/safe/rate-experience" class="mt-4 text-blue-500 hover:underline">Back</a>
	</div>
</Layout>
